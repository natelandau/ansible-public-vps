---
- name: "Get Cloudflare IP4 IP Addresses"
  delegate_to: localhost
  ansible.builtin.shell:
      cmd: |
          set -o pipefail
          wget -q https://www.cloudflare.com/ips-v4 -O - | tr '\n' ','
      executable: /bin/bash
  register: response
  changed_when: false
  check_mode: false

- name: set variable cloudflare_ip4_ips
  ansible.builtin.set_fact:
      cloudflare_ip4_ips: "{{ response.stdout }}"

- name: "Ensure {{ traefik_log_location }} exists"
  become: true
  ansible.builtin.file:
      path: "{{ traefik_log_location }}"
      mode: 0755
      owner: root
      group: root
      state: directory

- name: "Ensure {{ docker_dir }}/traefik/rules exists"
  ansible.builtin.file:
      path: "{{ docker_dir }}/traefik/rules"
      mode: 0755
      state: directory

- name: "Template Traefik Docker Compose"
  ansible.builtin.template:
      src: "traefik-docker-compose.yml.j2"
      dest: "{{ docker_dir }}/traefik.yml"
      mode: 0644
  notify: restart_traefik

- name: "Template Traefik Config File"
  ansible.builtin.template:
      src: "traefik-config-middlewares.yml.j2"
      dest: "{{ docker_dir }}/traefik/rules/middlewares.yml"
      mode: 0644
  notify: restart_traefik

- name: "Template diagnostics compose file"
  ansible.builtin.template:
      src: "diagnostics-container.yml"
      dest: "{{ docker_dir }}/diagnostics.yml"
      mode: 0644

- name: "Copy httpauth"
  ansible.builtin.copy:
      src: httpauth.txt
      dest: "{{ docker_dir }}/traefik/.httpauth.txt"
      owner: "{{ ansible_user_uid }}"
      group: "{{ ansible_user_gid }}"
      mode: "0644"
  notify: restart_traefik

- name: "Install logrotation"
  become: true
  ansible.builtin.template:
      src: "traefik.logrotate.j2"
      dest: "/etc/logrotate.d/traefik"
      owner: "root"
      group: "root"
      mode: "0644"
